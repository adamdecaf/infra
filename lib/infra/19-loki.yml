---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: infra
spec:
  type: ClusterIP
  selector:
    app: loki
  ports:
    - name: http
      protocol: TCP
      port: 3100
      targetPort: 3100
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: infra
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: loki
  namespace: infra
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/force-hsts: "true"
    ingress.kubernetes.io/hsts-max-age: "315360000"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-host: "infra.moov.io"
    ingress.kubernetes.io/ssl-force-host: "true"
spec:
  rules:
    - host: infra.moov.io
      http:
        paths:
          - path: /loki/
            backend:
              serviceName: oauth2-proxy
              servicePort: 4180
              # Uncommenting these would bypass auth and allow anonymous requests to loki.
              # serviceName: loki
              # servicePort: 3100
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data
  namespace: infra
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: infra
data:
  loki.yml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      chunk_idle_period: 15m
    schema_config:
      configs:
        - from: 2019-01-01
          store: boltdb
          object_store: filesystem
          schema: v9
          index:
            prefix: index_
            period: 168h
    storage_config:
      boltdb:
        directory: /data/loki/index
      filesystem:
        directory: /data/loki/chunks
    limits_config:
      enforce_metric_name: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: infra
  labels:
    app: loki
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      containers:
        - image: grafana/loki:v1.1.0
          imagePullPolicy: Always
          name: loki
          args:
            - -config.file=/etc/loki/loki.yml
            - -server.path-prefix=/loki/
            - -log.level=info
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/
            - name: loki-data
              mountPath: /data/loki
          ports:
            - containerPort: 3100
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 25Mi
          readinessProbe:
            httpGet:
              # GET /ready returns 204, which doesn't seem to work
              path: /loki/ready
              port: 3100
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /loki/ready
              port: 3100
            initialDelaySeconds: 10
            periodSeconds: 10
          # securityContext: # TODO(adam): K8s pods have problems running as non-root
          #   runAsUser: 0
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
            items:
              - key: loki.yml
                path: loki.yml
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
      restartPolicy: Always
---
